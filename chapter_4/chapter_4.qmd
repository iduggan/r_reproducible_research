---
title: "chapter_4"
format: 
  html:
    toc: true
editor: source
---

# Chapter 4: Data Structures

Toy dataset:

#feline-data.csv
cats <- data.frame(coat = c("calico", "black", "tabby"),
                    weight = c(2.1, 5.0, 3.2),
                    likes_string = c(1, 0, 1))

write.csv(x = cats, file = "data/feline-data.csv", row.names = FALSE)

#Loading csv into R
cats <- read.csv(file = "data/feline-data.csv")
cats
 
> output:     
coat weight likes_string
1 calico    2.1            1
2  black    5.0            0
3  tabby    3.2            1

#Exploring dataset:

cats$weight

> output: 
> cats$weight
[1] 2.1 5.0 3.2

cats$coat

>output: > cats$coat
[1] "calico" "black"  "tabby" 

cats$weight + 2
>[1] 4.1 7.0 5.2

paste("My cat is", cats$coat)
>[1] "My cat is calico" "My cat is black"  "My cat is tabby" 

#Data Types

typeof(cats$weight)
>double

* There are 5 main types: double, integer, complex, logical and character; double is also called numeric

feline-data_v2.csv:

catsv2 <- data.frame(coat = c("calico", "black", "tabby", "tabby"),
                    weight = c(2.1, 5.0, 3.2, 2.3),
                    likes_string = c(1, 0, 1, 1))
                    
write.csv(x = catsv2, file = "data/feline-data_v2.csv", row.names = FALSE)


catsv2 <- read.csv(file="data/feline-data_v2.csv")
typeof(cats$weight)
> double

*the tutorial says they should be character; don't know what I did wrong 

str(catsv2)
> data.frame':	4 obs. of  3 variables:
 $ coat        : chr  "calico" "black" "tabby" "tabby"
 $ weight      : num  2.1 5 3.2 2.3
 $ likes_string: int  1 0 1 1
 
## Vectors and Type conversion

my_vector <- vector(length = 3)
my_vector
> FALSE FALSE FALSE

another_vector <- vector(mode='character', length=3)
another_vector
> "" "" ""

* Vector in R = ordered list of things; everything in a vector must be the same basic data type.
  * check if something is a vector with str() function
  * ex: str(another_vector)

    >  chr [1:3] "" "" ""
    
* str(cats$weight)

> num [1:3] 2.1 5 3.2

## Combining Vectors

combine_vector <- c(2,6,3)
combine_vector

> [1] 2 6 3

+ Importance of type: 

("vector_hw.qmd")

##Lists + Names:

x <- 1:26
x <- x * 2

pizza_price <- c( pizzasubito = 5.64, pizzafresh = 6.60, callapizza = 4.50 )

names(pizza_price)[3] <- "call-a-pizza"
pizza_price

>  pizzasubito   pizzafresh call-a-pizza 
        5.64         6.60         4.50 

* names( OBJECT ) <-  CHARACTER_VECTOR

## Data Frames

*class, just like names, is an attribute attached to the object

Challenge:

cats[1]
>  coat
1 calico
2  black
3  tabby

cats$coat
> [1] "calico" "black"  "tabby" 

cats[, 1]
> [1] "calico" "black"  "tabby" 

##Matrices

matrix_example <- matrix(0, ncol=6, nrow=3)
matrix_example
> [,1] [,2] [,3] [,4] [,5] [,6]
[1,]    0    0    0    0    0    0
[2,]    0    0    0    0    0    0
[3,]    0    0    0    0    0    0

dim(matrix_example)
> 3,6 

typeof(matrix_example)
> "double"

length(matrix_example)
> 18 

(3*6)

## Key takeaways
* Use read.csv to read tabular data in R.
* The basic data types in R are double, integer, complex, logical, and character
* Data structures such as data frames or matrices are built on top of lists and vectors, with some added attributes.
